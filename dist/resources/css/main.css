/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct CSS rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 * If $color has an alpha channel, it will be ignored and overridden. To increase the opacity of the shadow, use
 * $opacity-boost.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-value(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
.main-with-sidebar {
  background-color: #e0e0e0; }

.wm-grid {
  /* @alternate */
  background-color: #fff;
  background-color: var(--mdc-theme-background, #fff);
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  margin: 0 auto; }
  .wm-grid .mdc-dynamic-grid__item {
    /* @alternate */
    background-color: #b37eff;
    background-color: var(--mdc-theme-primary-light, #b37eff);
    /* @alternate */
    color: rgba(0, 0, 0, 0.87);
    color: var(--mdc-theme-text-primary-on-primary-light, rgba(0, 0, 0, 0.87));
    border: 2px solid rgba(0, 0, 0, 0.12); }
    .wm-grid .mdc-dynamic-grid__item--selected {
      /* @alternate */
      background-color: #8936ff;
      background-color: var(--mdc-theme-primary-dark, #8936ff); }
  .wm-grid .mdc-dynamic-grid__item__ghost {
    /* @alternate */
    background-color: #018786;
    background-color: var(--mdc-theme-secondary, #018786); }
  .wm-grid__placeholder {
    width: 100%;
    height: 100%;
    position: absolute;
    display: flex;
    justify-content: center; }
    .wm-grid__placeholder .mdc-typography {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));
      margin-top: 12px;
      order: 1; }
    .wm-grid__placeholder .mdc-icon {
      /* @alternate */
      color: rgba(0, 0, 0, 0.38);
      color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));
      font-size: 48px;
      order: 0; }

.wm-left-toolbar__action {
  /* @alternate */
  background-color: #fff;
  background-color: var(--mdc-theme-background, #fff);
  /* @alternate */
  color: rgba(0, 0, 0, 0.38);
  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));
  margin-bottom: 20px; }
  .wm-left-toolbar__action::before, .wm-left-toolbar__action::after {
    background-color: rgba(0, 0, 0, 0.54); }
  .wm-left-toolbar__action:last-child {
    margin-bottom: 0; }

.wm-right-toolbar {
  height: 100%;
  display: flex; }
  .wm-right-toolbar > * {
    margin-bottom: 20px;
    flex-grow: 1; }
  .wm-right-toolbar > *:last-child {
    margin-bottom: 0; }

.wm-layers-grid .mdc-dynamic-grid__item {
  display: flex;
  align-items: stretch; }

.wm-layers {
  overflow-y: auto;
  overflow-x: hidden; }

.wm-layer {
  /* @alternate */
  background-color: #fff;
  background-color: var(--mdc-theme-background, #fff);
  flex-grow: 1;
  padding: 10px;
  display: flex;
  align-items: center;
  align-content: stretch;
  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }

.mdc-toolbar .mdc-tab {
  /* @alternate */
  color: white;
  color: var(--mdc-theme-text-primary-on-primary, white); }
  .mdc-toolbar .mdc-tab .mdc-tab__icon {
    /* @alternate */
    color: white;
    color: var(--mdc-theme-text-primary-on-primary, white); }
.mdc-toolbar .mdc-tab-bar__indicator,
.mdc-toolbar .mdc-tab__indicator {
  /* @alternate */
  background-color: white;
  background-color: var(--mdc-theme-text-primary-on-primary, white); }

:root {
  --mdc-box-margin: 0px; }

.hide {
  display: none; }

html {
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  margin: 0; }

.content {
  width: 100%;
  display: flex;
  min-height: 100vh;
  align-items: stretch; }

.main-with-sidebar {
  flex: 1 1 100%; }

.mdc-toolbar__title {
  font-weight: 300;
  font-size: 24px; }

.material-icons {
  user-select: none; }

.mdc-expand {
  cursor: default;
  transform: rotate(0deg);
  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms; }

.mdc-expand--rotated {
  transform: rotate(180deg); }

/* MDC Form-field */
.mdc-form-field {
  margin-bottom: 16px; }

.mdc-form-field.mdc-form-field--align-end label {
  flex-grow: 1; }

/* MDC Divider */
.mdc-divider {
  background-color: rgba(0, 0, 0, 0.12);
  height: 1px;
  margin: 0;
  border: none;
  flex-shrink: 0;
  box-sizing: inherit; }

.mdc-divider--inset {
  margin-left: 72px; }

/* MDC Snackbar */
.mdc-snackbar {
  z-index: 1000; }

/* MDC Textfield */
.mdc-text-field-wrapper {
  display: flex;
  flex-direction: column; }

.mdc-text-field-wrapper.mdc-text-field {
  flex-grow: 1; }

.mdc-text-field-helper-text {
  height: 0.75rem; }

/* MDC List */
.mdc-list--bordered {
  /* remove the side padding. we'll be placing it around the item instead. */
  padding-right: 0;
  padding-left: 0; }

.mdc-list--bordered .mdc-list-item {
  /* Add the list side padding padding to the list item. */
  padding: 0 16px;
  /* Add a border around each element. */
  border: 1px solid rgba(0, 0, 0, 0.12); }

/* Ensure adjacent borders don't collide with one another. */
.mdc-list--bordered .mdc-list-item:not(:first-child) {
  border-top: none; }

.mdc-checkbox.mdc-list-item__start-detail, .mdc-checkbox.mdc-list-item__end-detail {
  width: 18px;
  height: 18px; }

/* MDC Avatar */
.mdc-avatar {
  border-radius: 50%;
  font-size: 20px;
  height: 40px;
  width: 40px;
  display: inline-flex;
  align-items: center;
  justify-content: center; }

.mdc-avatar.mdc-avatar--dense {
  width: 30px;
  height: 30px;
  font-size: 15px; }

/* MDC Tab bar */
.mdc-tab[disabled=true] {
  color: var(--mdc-theme-text-disabled-on-background);
  pointer-events: none;
  cursor: default; }

/* MDC Tree */
.mdc-tree .mdc-tree__item {
  cursor: pointer; }

.mdc-tree .mdc-tree__item .mdc-tree__item__nested-list {
  padding-right: 0;
  overflow: hidden;
  -webkit-transition: max-height 0.2s;
  -moz-transition: max-height 0.2s;
  -ms-transition: max-height 0.2s;
  -o-transition: max-height 0.2s;
  transition: max-height 0.2s; }

.mdc-tree .mdc-tree__item .mdc-tree__item__nested-list--hidden {
  /* display:none; */
  max-height: 0; }

.mdc-permanent-drawer .mdc-list .mdc-tree__item__nested-list .mdc-list-item {
  padding-left: 30px; }

/*# sourceMappingURL=main.css.map */
