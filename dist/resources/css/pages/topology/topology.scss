@import '../../components/theme/_mixins';
@import '../../components/theme/_color-palette';
@import '../../components/typography/_mixins';
@import './_mixins';
@import '../boards/dvb_niit';

$boards: ('TS', 'TS2IP', 'IP2TS', 'DVB');

@for $i from 1 through length($boards) {
    @include topology-board-type(nth($boards,$i));
}

#main-content {
    display: flex;
    align-items: stretch;
    overflow-x: auto;
    > * {
        flex-grow: 1;
    }
}

.topology {
    display: grid;
    height: 100%;
    position: relative;
}

.topology__switch {
    position: absolute;
}

.topology__drawer {
    .mdc-drawer__drawer {
        min-height: 100vh;
        width: 500px;
        @media screen and (max-width: 500px) {
            width: 100vw;
        }
    }
    &__error {
        padding: 20px;
        justify-content: center;
        align-items: center;
        .mdc-icon {
            width: 40px;
            height: 40px;
            font-size: 40px;
            color: $material-color-red-300;
        }
        .mdc-typography {
            margin-top: 10px;
            text-align: center;
            @include mdc-theme-prop(color,text-secondary-on-background);
        }
    }
    &__progress {
        padding: 20px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        > p {
            margin-top: 10px;
            text-align: center;
            @include mdc-theme-prop(color,text-secondary-on-background);
            @keyframes blink {
                0% {
                    opacity: .2;
                }
                20% {
                    opacity: 1;
                }
                100% {
                    opacity: .2;
                }
            }
            span {
                animation-name: blink;
                animation-duration: 1.4s;
                animation-iteration-count: infinite;
                animation-fill-mode: both;
            }
            span:nth-child(2) {
                animation-delay: .2s;
            }
            span:nth-child(3) {
                animation-delay: .4s;
            }
        }
    }
    &__header {
        padding: 0 20px;
        min-height: 64px;
        justify-content: space-between;
        align-items: center;
        @media screen and (max-width: 599px) {
            min-height: 56px;
        }
    }
    &__close {
        margin-left: 20px;
    }
    &__dynamic-content {
        &__tabs {
            .mdc-tab-bar-scroller__indicator {
                display: none;
            }
            .mdc-tab {
                min-width: 70px;
                flex-grow: 1;
                flex-basis: 0;
            }
        }
        &__body {
            margin: 20px;
        }
    }
    &__body {
        overflow-y: auto;
        overflow-x: hidden;
    }
}

.topology__node-wrapper {
    margin: auto 0;
}

.topology__paths {
    z-index: 0;
    position: absolute;
    width: 100%;
    height: 100%;
}

.topology__path {
    stroke: black;
    stroke-width: 2;

    &--active {
        stroke: $material-color-light-green-500;
    }
    &--muted {
        stroke: $material-color-grey-500;
    }
    &--sync {
        stroke: $material-color-green-500;
    }
}

.topology__input {
    user-select: none;
    cursor: initial;
    align-items: center;
    @include mdc-theme-prop(background-color, background);
    @include mdc-theme-prop(color, text-primary-on-background);
    &::before { opacity: 0 !important };
    &::after { opacity: 0 !important };
    .mdc-chip__text {
        flex-grow: 2;
        font-size: 0.95rem;
        white-space: nowrap;
    }
    .mdc-chip__icon {
        @include mdc-theme-prop(color, text-icon-on-background);
    }
}

.topology__block {
    margin: 20px;
    max-width: 250px;

    &--fail {
        .topology__block__body {
            background-color: $material-color-red-200;
            @include mdc-theme-prop(color, text-secondary-on-light);
        }
    }

    &--init {
        .topology__block__body {
            background-color: $material-color-grey-400;
            @include mdc-theme-prop(color, text-secondary-on-light);
        }
    }

    &--fine {
        .topology__block__body {
            background-color: transparent;
        }
    }

    &__header {
        height: 41px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    &__body {
        padding: 0 20px;
        display: flex;
        flex-direction: column;
        align-items: space-around;
        justify-content: space-around;
    }
}

.topology__cpu {
    &__header {
        $bg-color: $material-color-blue-grey-500;
        $tone: mdc-theme-tone($bg-color);
        .mdc-card__title, .mdc-icon {
            @if ($tone == 'light') {
                @include mdc-theme-prop(color, text-primary-on-light)
            }
            @else {
                @include mdc-theme-prop(color, text-primary-on-dark)
            }
        }
        background-color: $bg-color;
    }
}
